{
  "fractals": [
    {
      "id": "triangle",
      "name": "Sierpinski Triangle",
      "description": "Classic chaos game using three vertices of a triangle. Each step moves halfway toward a randomly chosen vertex. This creates the famous Sierpinski triangle pattern through simple random rules.",
      "formulas": [
        "xₙ₊₁ = (xₙ + vₓ) / 2",
        "yₙ₊₁ = (yₙ + v_y) / 2",
        "Random vertex selection"
      ],
      "type": "chaosGame",
      "vertices": [
        { "xRatio": 0.5, "yRatio": 0.05 },
        { "xRatio": 0.05, "yRatio": 0.95 },
        { "xRatio": 0.95, "yRatio": 0.95 }
      ],
      "ratio": 0.5
    },
    {
      "id": "square",
      "name": "Square Chaos",
      "description": "A chaos game using four vertices of a square with the restriction that the same vertex cannot be chosen twice in a row. This creates intricate patterns within the square boundary.",
      "formulas": [
        "xₙ₊₁ = (xₙ + vₓ) / 2",
        "yₙ₊₁ = (yₙ + v_y) / 2",
        "skip if vertex = previous"
      ],
      "type": "chaosGame",
      "vertices": [
        { "xRatio": 0.1, "yRatio": 0.1 },
        { "xRatio": 0.9, "yRatio": 0.1 },
        { "xRatio": 0.9, "yRatio": 0.9 },
        { "xRatio": 0.1, "yRatio": 0.9 }
      ],
      "ratio": 0.5,
      "skipRepeat": true
    },
    {
      "id": "pentagon",
      "name": "Golden Pentagon",
      "description": "Chaos game using five vertices of a regular pentagon with the golden ratio (0.618). Creates beautiful spiral patterns with five-fold symmetry.",
      "formulas": [
        "xₙ₊₁ = (xₙ + vₓ) × φ",
        "yₙ₊₁ = (yₙ + v_y) × φ",
        "φ = 0.618 (golden ratio conjugate)"
      ],
      "type": "chaosGame",
      "vertices": [
        { "xRatio": 0.5, "yRatio": 0.05 },
        { "xRatio": 0.95, "yRatio": 0.35 },
        { "xRatio": 0.78, "yRatio": 0.9 },
        { "xRatio": 0.22, "yRatio": 0.9 },
        { "xRatio": 0.05, "yRatio": 0.35 }
      ],
      "ratio": 0.618
    },
    {
      "id": "fern",
      "name": "Barnsley Fern",
      "description": "A famous fractal that resembles a black spleenwort fern. Generated through iterated function systems with four affine transformations applied with different probabilities.",
      "formulas": [
        "f₁: (0, 0.16y) - Stem - 1%",
        "f₂: (0.85x + 0.04y, -0.04x + 0.85y + 1.6) - Successive leaflets - 85%",
        "f₃: (0.2x - 0.26y, 0.23x + 0.22y + 1.6) - Largest left leaflet - 7%",
        "f₄: (-0.15x + 0.28y, 0.26x + 0.24y + 0.44) - Largest right leaflet - 7%"
      ],
      "type": "chaosAffine",
      "affineRules": [
        { "a": 0, "b": 0, "c": 0, "d": 0.16, "e": 0, "f": 0, "p": 0.01 },
        { "a": 0.85, "b": 0.04, "c": -0.04, "d": 0.85, "e": 0, "f": 1.6, "p": 0.85 },
        { "a": 0.2, "b": -0.26, "c": 0.23, "d": 0.22, "e": 0, "f": 1.6, "p": 0.07 },
        { "a": -0.15, "b": 0.28, "c": 0.26, "d": 0.24, "e": 0, "f": 0.44, "p": 0.07 }
      ]
    },
    {
      "id": "crystal",
      "name": "Crystal Growth",
      "description": "Chaos game with hexagonal vertices and adjacent vertex restriction. Creates snowflake-like crystal structures with intricate branching patterns.",
      "formulas": [
        "xₙ₊₁ = (xₙ + vₓ) / 2",
        "yₙ₊₁ = (yₙ + v_y) / 2",
        "|current - previous| > 1 (no adjacent vertices)"
      ],
      "type": "chaosGame",
      "vertices": [
        { "xRatio": 0.5, "yRatio": 0.1 },
        { "xRatio": 0.1, "yRatio": 0.3 },
        { "xRatio": 0.1, "yRatio": 0.7 },
        { "xRatio": 0.5, "yRatio": 0.9 },
        { "xRatio": 0.9, "yRatio": 0.7 },
        { "xRatio": 0.9, "yRatio": 0.3 }
      ],
      "ratio": 0.5,
      "skipAdjacent": true
    },
    {
      "id": "spiral",
      "name": "Golden Spiral",
      "description": "Creates mesmerizing spiral patterns using eight vertices arranged in a circle and the golden ratio. Each iteration pulls points toward the vertices in a way that creates logarithmic spirals.",
      "formulas": [
        "xₙ₊₁ = (xₙ + vₓ) × φ",
        "yₙ₊₁ = (yₙ + v_y) × φ",
        "φ = 0.618 (golden ratio conjugate)"
      ],
      "type": "chaosGame",
      "vertices": [
        { "xRatio": 0.5, "yRatio": 0.5 },
        { "xRatio": 0.7, "yRatio": 0.3 },
        { "xRatio": 0.9, "yRatio": 0.5 },
        { "xRatio": 0.7, "yRatio": 0.7 },
        { "xRatio": 0.5, "yRatio": 0.9 },
        { "xRatio": 0.3, "yRatio": 0.7 },
        { "xRatio": 0.1, "yRatio": 0.5 },
        { "xRatio": 0.3, "yRatio": 0.3 }
      ],
      "ratio": 0.618
    },
    {
      "id": "hexagon",
      "name": "Hexagon Chaos",
      "description": "Standard chaos game with six vertices forming a regular hexagon. Creates complex geometric patterns with six-fold rotational symmetry.",
      "formulas": [
        "xₙ₊₁ = (xₙ + vₓ) / 2",
        "yₙ₊₁ = (yₙ + v_y) / 2",
        "No vertex restrictions"
      ],
      "type": "chaosGame",
      "vertices": [
        { "xRatio": 0.5, "yRatio": 0.05 },
        { "xRatio": 0.8, "yRatio": 0.2 },
        { "xRatio": 0.8, "yRatio": 0.5 },
        { "xRatio": 0.5, "yRatio": 0.65 },
        { "xRatio": 0.2, "yRatio": 0.5 },
        { "xRatio": 0.2, "yRatio": 0.2 }
      ],
      "ratio": 0.5
    },
    {
      "id": "tree",
      "name": "Fractal Tree",
      "description": "A more complex iterated function system that creates realistic tree structures. Uses six different affine transformations to build branches, leaves, and trunk.",
      "formulas": [
        "f₁: (0.05x, 0.6y) - Trunk - 10%",
        "f₂: (0.05x, -0.5y + 1.0) - Opposite trunk - 10%",
        "f₃: (0.46x - 0.15y, 0.39x + 0.38y + 0.6) - Left branches - 20%",
        "f₄: (0.47x - 0.15y, 0.17x + 0.42y + 1.1) - Right branches - 20%",
        "f₅: (0.43x + 0.28y, -0.25x + 0.45y + 1.0) - Upper left - 20%",
        "f₆: (0.42x + 0.26y, -0.35x + 0.31y + 0.7) - Upper right - 20%"
      ],
      "type": "chaosAffine",
      "affineRules": [
        { "a": 0.05, "b": 0, "c": 0, "d": 0.6, "e": 0, "f": 0, "p": 0.1 },
        { "a": 0.05, "b": 0, "c": 0, "d": -0.5, "e": 0, "f": 1.0, "p": 0.1 },
        { "a": 0.46, "b": -0.15, "c": 0.39, "d": 0.38, "e": 0, "f": 0.6, "p": 0.2 },
        { "a": 0.47, "b": -0.15, "c": 0.17, "d": 0.42, "e": 0, "f": 1.1, "p": 0.2 },
        { "a": 0.43, "b": 0.28, "c": -0.25, "d": 0.45, "e": 0, "f": 1.0, "p": 0.2 },
        { "a": 0.42, "b": 0.26, "c": -0.35, "d": 0.31, "e": 0, "f": 0.7, "p": 0.2 }
      ]
    },
    {
      "id": "dragon",
      "name": "Dragon Curve",
      "description": "A fractal that resembles a mythical dragon. Created through a chaos game with restrictions that create the characteristic twists and turns of the dragon curve.",
      "formulas": [
        "xₙ₊₁ = (xₙ + vₓ) / 2",
        "yₙ₊₁ = (yₙ + v_y) / 2",
        "Cannot choose opposite vertices"
      ],
      "type": "chaosGame",
      "vertices": [
        { "xRatio": 0.3, "yRatio": 0.3 },
        { "xRatio": 0.7, "yRatio": 0.3 },
        { "xRatio": 0.7, "yRatio": 0.7 },
        { "xRatio": 0.3, "yRatio": 0.7 }
      ],
      "ratio": 0.5,
      "skipOpposite": true
    },
    {
      "id": "levy",
      "name": "Lévy C Curve",
      "description": "A fractal that creates a continuous curve resembling the letter C. Uses a two-transform iterated function system to build the classic Lévy C curve pattern.",
      "formulas": [
        "f₁: (0.5x - 0.5y, 0.5x + 0.5y) - Rotate and scale - 50%",
        "f₂: (0.5x + 0.5y + 0.5, -0.5x + 0.5y + 0.5) - Rotate, scale, translate - 50%"
      ],
      "type": "chaosAffine",
      "affineRules": [
        { "a": 0.5, "b": -0.5, "c": 0.5, "d": 0.5, "e": 0, "f": 0, "p": 0.5 },
        { "a": 0.5, "b": 0.5, "c": -0.5, "d": 0.5, "e": 0.5, "f": 0.5, "p": 0.5 }
      ]
    },
    {
      "id": "koch",
      "name": "Koch Snowflake",
      "description": "Chaos game implementation of the famous Koch snowflake. Uses six vertices with specific movement rules to approximate the Koch curve pattern.",
      "formulas": [
        "xₙ₊₁ = (xₙ + vₓ) / 3",
        "yₙ₊₁ = (yₙ + v_y) / 3",
        "Special angle adjustments for Koch pattern"
      ],
      "type": "chaosGame",
      "vertices": [
        { "xRatio": 0.25, "yRatio": 0.4 },
        { "xRatio": 0.5, "yRatio": 0.1 },
        { "xRatio": 0.75, "yRatio": 0.4 },
        { "xRatio": 0.67, "yRatio": 0.7 },
        { "xRatio": 0.33, "yRatio": 0.7 },
        { "xRatio": 0.5, "yRatio": 0.9 }
      ],
      "ratio": 0.333
    },
    {
      "id": "sierpinski_carpet",
      "name": "Sierpinski Carpet",
      "description": "A square-based fractal that generalizes the Sierpinski triangle to two dimensions. Creates patterns with holes at multiple scales.",
      "formulas": [
        "xₙ₊₁ = (xₙ + vₓ) / 3",
        "yₙ₊₁ = (yₙ + v_y) / 3",
        "Skip center square moves"
      ],
      "type": "chaosGame",
      "vertices": [
        { "xRatio": 0.166, "yRatio": 0.166 },
        { "xRatio": 0.5, "yRatio": 0.166 },
        { "xRatio": 0.833, "yRatio": 0.166 },
        { "xRatio": 0.166, "yRatio": 0.5 },
        { "xRatio": 0.833, "yRatio": 0.5 },
        { "xRatio": 0.166, "yRatio": 0.833 },
        { "xRatio": 0.5, "yRatio": 0.833 },
        { "xRatio": 0.833, "yRatio": 0.833 }
      ],
      "ratio": 0.333,
      "skipCenter": true
    }
  ]
        }
